{"ast":null,"code":"var _jsxFileName = \"/Users/hammad/web-development/react/react-hooks/use-effect/src/ImageToggleOnScroll.js\";\nvar __jsx = React.createElement;\nimport React, { useRef, useEffect, useState } from 'react';\n\nvar ImageToggleOnScroll = function ImageToggleOnScroll(_ref) {\n  var primary = _ref.primary,\n      secondary = _ref.secondary;\n  var imgRef = useRef(null);\n  useEffect(function () {\n    window.addEventListener(\"scroll\", scrollHandler);\n    return function () {\n      window.removeEventListener(\"scroll\", scrollHandler);\n    };\n  });\n\n  var _useState = useState(isInView()),\n      inView = _useState[0],\n      setInView = _useState[1];\n\n  var isInView = function isInView() {\n    if (imgRef.current) {\n      var rect = imgRef.current.getBoundingClientRect();\n      return rect.top >= 0 && rect.bottom <= window.innerHeight;\n    }\n\n    return false;\n  };\n\n  var scrollHandler = function scrollHandler() {\n    setInView(function () {\n      return isInView();\n    });\n  };\n\n  return __jsx(\"img\", {\n    src: inView ? secondary : primary,\n    alt: \"\",\n    ref: imgRef,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default ImageToggleOnScroll;","map":{"version":3,"sources":["/Users/hammad/web-development/react/react-hooks/use-effect/src/ImageToggleOnScroll.js"],"names":["React","useRef","useEffect","useState","ImageToggleOnScroll","primary","secondary","imgRef","window","addEventListener","scrollHandler","removeEventListener","isInView","inView","setInView","current","rect","getBoundingClientRect","top","bottom","innerHeight"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;;AAEA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,OAA0B;AAAA,MAAxBC,OAAwB,QAAxBA,OAAwB;AAAA,MAAfC,SAAe,QAAfA,SAAe;AAElD,MAAOC,MAAM,GAAGN,MAAM,CAAC,IAAD,CAAtB;AACAC,EAAAA,SAAS,CAAC,YAAM;AACZM,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAiCC,aAAjC;AACA,WACI,YAAM;AACFF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAoCD,aAApC;AACH,KAHL;AAKH,GAPQ,CAAT;;AAHkD,kBAYvBP,QAAQ,CAACS,QAAQ,EAAT,CAZe;AAAA,MAY5CC,MAZ4C;AAAA,MAYpCC,SAZoC;;AAalD,MAAMF,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACnB,QAAGL,MAAM,CAACQ,OAAV,EAAkB;AACd,UAAMC,IAAI,GAAGT,MAAM,CAACQ,OAAP,CAAeE,qBAAf,EAAb;AACA,aAAOD,IAAI,CAACE,GAAL,IAAY,CAAZ,IAAiBF,IAAI,CAACG,MAAL,IAAeX,MAAM,CAACY,WAA9C;AACH;;AACD,WAAO,KAAP;AACH,GAND;;AAQA,MAAMV,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxBI,IAAAA,SAAS,CAAC,YAAM;AAAC,aAAOF,QAAQ,EAAf;AAAkB,KAA1B,CAAT;AACH,GAFD;;AAGA,SACI;AAAK,IAAA,GAAG,EAAEC,MAAM,GAAGP,SAAH,GAAaD,OAA7B;AACA,IAAA,GAAG,EAAC,EADJ;AAEA,IAAA,GAAG,EAAEE,MAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CA7BD;;AA+BA,eAAeH,mBAAf","sourcesContent":["import React, {useRef, useEffect, useState} from 'react';\n\nconst ImageToggleOnScroll = ({primary, secondary}) => {\n\n    const  imgRef = useRef(null);\n    useEffect(() => {\n        window.addEventListener(\"scroll\",scrollHandler);\n        return (\n            () => {\n                window.removeEventListener(\"scroll\",scrollHandler);\n            }\n        )\n    })\n    \n    const[inView, setInView] = useState(isInView());\n    const isInView = () => {\n        if(imgRef.current){\n            const rect = imgRef.current.getBoundingClientRect();\n            return rect.top >= 0 && rect.bottom <= window.innerHeight; \n        }\n        return false;\n    };\n\n    const scrollHandler = () => {\n        setInView(() => {return isInView()})\n    }\n    return (\n        <img src={inView ? secondary:primary} \n        alt=\"\"\n        ref={imgRef}/>\n    );\n}\n\nexport default ImageToggleOnScroll;"]},"metadata":{},"sourceType":"module"}